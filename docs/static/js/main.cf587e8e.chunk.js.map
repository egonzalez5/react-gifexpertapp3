{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAmB7C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,yBAAKc,UAAU,wBACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmB1C,OAZIC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGDqB,EDf4BK,CAAa1B,GAAhCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAGpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAER,yBAAKA,UAAU,aAEHH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEjBnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,aAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAK9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACE2B,IAAK3B,EACLA,SAAUA,U,MCdlC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.cf587e8e.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        \n        if(inputValue.trim().length > 2){\n            \n        setCategories( cats => [inputValue, ...cats ]);\n        setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=7I8Ud2OnyFiCKA5zAM6ud0GNTUkAssbj`\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( {title, url }) => {\n\n\n    return (\n        <div className=\"card animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    const {data:images, loading} = useFetchGifs(category);\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        \n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n       \n            <div className=\"card-grid\">\n                    {\n                        images.map(img => (\n                            <GifGridItem \n                            key={img.id}\n                            {...img}\n                            />\n                        ))\n                    }\n                \n            </div>\n        </>\n       \n    )\n}\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState]  = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n\n         })\n    }, [category])\n\n  \nreturn state;\n\n}","import React,{useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One puch']);\n\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                      <GifGrid \n                        key={category}\n                        category={category} \n                      />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}